#include <stdio.h>
#include <stdlib.h>
struct TreeNode 
{
    int data;
    struct TreeNode* left;
    struct TreeNode* right;
};
struct TreeNode* createNode(int data)
 {
    struct TreeNode* newNode = (struct TreeNode*)malloc(sizeof(struct TreeNode));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}
struct TreeNode* insert(struct TreeNode* root, int data) 
{
    if (root == NULL)
	 {
        return createNode(data);
    }

    if (data < root->data) 
	{
        root->left = insert(root->left, data);
    } else if (data > root->data) {
        root->right = insert(root->right, data);
    }

    return root;
}
void inorderTraversal(struct TreeNode* root)
 {
    if (root != NULL)
	 {
        inorderTraversal(root->left);
        printf("%d ", root->data);
        inorderTraversal(root->right);
    }
}

int main()
 {
    struct TreeNode* root = NULL;
    root = insert(root, 50);
    insert(root, 30);
    insert(root, 70);
    insert(root, 20);
    insert(root, 40);
    insert(root, 60);
    insert(root, 80);
    printf("In-order traversal:\n");
    inorderTraversal(root);
    printf("\n");
    return 0;
}
